<?php

/**
 * @file
 * Contains ukd8_customizations.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function ukd8_customizations_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ukd8_customizations module.
    case 'help.page.ukd8_customizations':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Theme and admin customizations') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter() to alter exposed forms.
 */
function ukd8_customizations_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // customizations for event submission
  $all_day_forms = [
    'node_event_form', 'node_event_edit_form',
  ];
  if (in_array($form_id, $all_day_forms)) {
    $form['#attached']['library'][] = 'ukd8_customizations/all-day';
    $form['#attached']['drupalSettings']['ukd8_customizations']['all_day']['all_day'] = false;
  }
}

/**
 * Implements hook_field_wdget_form_alter().
 */
function ukd8_customizations_field_widget_single_element_form_alter(&$element, FormStateInterface $form_state, $context) {
  if ($context['items']->getName() == 'field_theme_color_scheme') {
    // limit options available to component
    $theme_settings = \Drupal::config('ukd8.settings');
    $component_settings = $theme_settings->get('scheme_settings');

    // figure out if some options are disallowed
    if (isset($element['#entity_type']) && isset($element['#bundle'])) {
      $type = $element['#entity_type'];
      $bundle = $element['#bundle'];
      $theme_config_key = $type . "__" . $bundle;

      // override the theme options
      $opts = array_merge(
        [
          '' => '- Theme default -',
        ],
        $theme_settings->get('scheme_options')
      );

      if (isset($component_settings[$theme_config_key]['disallowed'])) {
        foreach ($component_settings[$theme_config_key]['disallowed'] as $d) {
          unset($opts[$d]);
        }
      }

      // ugh, do it with js
      $element['#attached']['library'][] = 'ukd8_customizations/theme-selector';
      $element['theme_selector'] = [
        '#type' => 'select',
        '#options' => $opts,
      ];
    }
  }
}

/**
 * Implements hook_toolbar_alter() to modify toolbar items
 */
function ukd8_customizations_toolbar_alter(&$items) {
  // change the name on the contextual edit button
  if (isset($items['contextual'])) {
    $items['contextual']['tab']['#value'] = t('Toggle in-page edit options');
  }
}